{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasErorr","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEtB,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACrB,OAAS,cAAC,EAAD,CAEJR,GAAIK,EAAOG,GAAGR,GACbF,KAAMO,EAAOG,GAAGV,KACfC,MAAOM,EAAOG,GAAGT,OAHfS,SCGHC,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKV,UAAW,MAAhB,SACI,uBAAOA,UAAU,mCACjBW,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCKPI,EAVA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCaJC,E,kDAhBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACAO,MAAQ,CACTC,UAAS,GAHC,E,qDAMnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,oDAEJG,KAAKX,MAAMK,a,GAdCQ,aCsDZC,G,wDA/CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAf1C,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,qDAOd,WAAqB,IAAD,OAChByB,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UAEfF,MAAK,SAAAG,GACF,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBASpC,WAAU,IAAD,EAC2BZ,KAAKJ,MAA7BlB,EADH,EACGA,OAAQK,EADX,EACWA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAKtC,EAAOwC,OAIJ,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WARvB,6C,GA5BDX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c8e694c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n\r\n    return (\r\n        \r\n        <div className='bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src ={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n   \r\n    return (\r\n        <div>\r\n            {\r\n            robots.map((user, i) => {\r\n         return  (<Card\r\n             key={i}\r\n              id={robots[i].id}\r\n               name={robots[i].name}\r\n                email={robots[i].email}\r\n                 />\r\n            );\r\n         })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return (\r\n        <div className= 'pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' placeholder='search robots' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px' }}>\r\n            {props.children}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n         this.state = {\r\n             hasErorr:false\r\n         }\r\n    }\r\n    componentDidCatch(error,info) {\r\n        this.setState({hasErorr:true})\r\n    }\r\n    render() {\r\n        if(this.state.hasErorr){\r\n            return <h1>error hi error h!!</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './app.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n            return response.json();\r\n        })\r\n            .then(users => {\r\n                this.setState({ robots: users })\r\n            });\r\n\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if (!robots.length) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './containers/App';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}